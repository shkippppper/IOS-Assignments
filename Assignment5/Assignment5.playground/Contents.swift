import Foundation

//1.рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ Enum-рЃў рЃАрЃљрЃ«рЃћрЃџрЃўрЃЌ WeekDay рЃерЃћрЃАрЃљрЃЉрЃљрЃЏрЃўрЃАрЃў рЃЦрЃћрЃўрЃАрЃћрЃЉрЃўрЃЌ. рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃўрЃдрЃћрЃЉрЃА рЃљрЃЏ рЃћрЃюрЃљрЃЏрЃўрЃА рЃбрЃўрЃърЃА рЃЊрЃљ рЃЉрЃћрЃГрЃЊрЃљрЃЋрЃА рЃњрЃљрЃЊрЃљрЃгрЃЮрЃЊрЃћрЃЉрЃБрЃџрЃў рЃЊрЃдрЃћ рЃАрЃљрЃЏрЃБрЃерЃљрЃЮрЃљ рЃЌрЃБ рЃЊрЃљрЃАрЃЋрЃћрЃюрЃћрЃЉрЃўрЃА.

enum WeekDay {
    case monday, tuesday, wednesday, thursday, friday, saturday, sunday
}

func checkIfWorkDay(weekDay: WeekDay){
    switch weekDay{
    case .monday:
        print("\(WeekDay.monday) рЃАрЃљрЃЏрЃБрЃерЃљрЃЮ рЃЊрЃдрЃћрЃљ")
    case .tuesday:
        print("\(WeekDay.tuesday) рЃАрЃљрЃЏрЃБрЃерЃљрЃЮ рЃЊрЃдрЃћрЃљ")
    case .wednesday:
        print("\(WeekDay.wednesday) рЃАрЃљрЃЏрЃБрЃерЃљрЃЮ рЃЊрЃдрЃћрЃљ")
    case .thursday:
        print("\(WeekDay.thursday) рЃАрЃљрЃЏрЃБрЃерЃљрЃЮ рЃЊрЃдрЃћрЃљ")
    case .friday:
        print("\(WeekDay.friday) рЃАрЃљрЃЏрЃБрЃерЃљрЃЮ рЃЊрЃдрЃћрЃљ")
    case .saturday:
        print("\(WeekDay.saturday) рЃЊрЃљрЃАрЃЋрЃћрЃюрЃћрЃЉрЃўрЃА рЃЊрЃдрЃћрЃљ")
    case .sunday:
        print("\(WeekDay.sunday) рЃЊрЃљрЃАрЃЋрЃћрЃюрЃћрЃЉрЃўрЃА рЃЊрЃдрЃћрЃљ")
    }
}

checkIfWorkDay(weekDay: .monday)
checkIfWorkDay(weekDay: .saturday)


//2.рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ Enum-рЃў рЃАрЃљрЃ«рЃћрЃџрЃљрЃЊ GialaSquad, рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃљрЃдрЃгрЃћрЃарЃА рЃњрЃўрЃљ рЃАрЃБрЃарЃљрЃЏрЃћрЃџрЃљрЃерЃЋрЃўрЃџрЃўрЃА рЃцрЃљрЃюрЃЎрЃџрЃБрЃЉрЃўрЃА рЃгрЃћрЃЋрЃарЃћрЃЉрЃўрЃА рЃЊрЃЮрЃюрЃћрЃћрЃЉрЃА рЃЦрЃћрЃўрЃАрЃћрЃЉрЃўрЃЌ : РђюTsigroviMantoРђЮ, РђюMoshishvlebuliMkerdiРђЮ, РђюTuGapatioРђЮ. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ рЃцрЃарЃЮрЃцрЃћрЃарЃЌрЃў GialaSquad-рЃерЃў, рЃарЃЮрЃЏрЃћрЃџрЃАрЃљрЃф рЃћрЃЦрЃюрЃћрЃЉрЃљ рЃўрЃюрЃцрЃЮрЃарЃЏрЃљрЃфрЃўрЃљ рЃЌрЃБ рЃарЃљ рЃдрЃўрЃарЃА рЃЌрЃўрЃЌрЃЮрЃћрЃБрЃџрЃў рЃЊрЃЮрЃюрЃћ рЃЌрЃЋрЃћрЃерЃў (рЃЊрЃЮрЃюрЃћрЃћрЃЉрЃў рЃЊрЃљрЃџрЃљрЃњрЃћрЃЉрЃБрЃџрЃўрЃљ рЃФрЃЋрЃўрЃарЃўрЃЊрЃљрЃю рЃўрЃљрЃцрЃўрЃАрЃљрЃЎрЃћрЃю). рЃЊрЃљрЃБрЃЏрЃљрЃбрЃћрЃЌ рЃЏрЃћрЃЌрЃЮрЃЊрЃў рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃљрЃЋрЃА рЃЌрЃўрЃЌрЃЮрЃћрЃБрЃџрЃў рЃЊрЃЮрЃюрЃўрЃА рЃцрЃљрЃАрЃА

enum GialaSquad{
    case TsigroviManto
    case MoshishvlebuliMkerdi
    case TuGapatio
    
    var monthlyCost:Int { //computed
        switch self {
        case .TsigroviManto:
            return 8300
        case .MoshishvlebuliMkerdi:
            return 5200
        case .TuGapatio:
            return 2100
        }
        
    }
    
    func printPrice(){
        print("\(self)-рЃА рЃЊрЃЮрЃюрЃўрЃА рЃЌрЃЋрЃўрЃБрЃарЃў рЃњрЃљрЃЊрЃљрЃАрЃљрЃ«рЃљрЃЊрЃў рЃљрЃарЃўрЃА \(monthlyCost)­Ъњх")
    }
}

var mySubscriptionLevel = GialaSquad.TsigroviManto
mySubscriptionLevel.printPrice()
mySubscriptionLevel = .MoshishvlebuliMkerdi
mySubscriptionLevel.printPrice()
mySubscriptionLevel = .TuGapatio
mySubscriptionLevel.printPrice()


//3.рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ enum-рЃў Weather рЃерЃћрЃЏрЃЊрЃћрЃњрЃў рЃЦрЃћрЃўрЃАрЃћрЃЉрЃўрЃЌ, Sunny, Cloudy, Rainy рЃЊрЃљ Snowy. рЃљрЃЏ рЃЦрЃћрЃўрЃАрЃћрЃЉрЃА рЃБрЃюрЃЊрЃљ рЃ░рЃЦрЃЮрЃюрЃЊрЃћрЃА associated value Celsius-рЃўрЃА рЃАрЃљрЃ«рЃўрЃЌ. рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ function рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃЏрЃўрЃўрЃдрЃћрЃЉрЃА рЃљрЃЏ enum-рЃА, рЃЊрЃљ рЃЏрЃЮрЃњрЃЋрЃфрЃћрЃЏрЃА рЃарЃћрЃЎрЃЮрЃЏрЃћрЃюрЃЊрЃљрЃфрЃўрЃљрЃА рЃарЃљ рЃБрЃюрЃЊрЃљ рЃЕрЃљрЃЋрЃўрЃфрЃЋрЃљрЃЌ рЃерЃћрЃАрЃљрЃЉрЃљрЃЏрЃўрЃАрЃў рЃљрЃЏрЃўрЃюрЃЊрЃўрЃА рЃЏрЃўрЃ«рЃћрЃЊрЃЋрЃўрЃЌ.

enum Weather {
    case Sunny(Celsius: Int)
    case Cloudy(Celsius: Int)
    case Rainy(Celsius: Int)
    case Snowy(Celsius: Int)
}

func reccomendClothing(weather: Weather){
    switch weather{
    case .Sunny(let celsius):
        if celsius > 20 {
            print("рЃЏрЃљрЃўрЃЎрЃљ, рЃерЃЮрЃарЃбрЃў, рЃерЃџрЃЮрЃърЃљрЃюрЃфрЃћрЃЉрЃў, рЃАрЃљрЃЌрЃЋрЃљрЃџрЃћрЃћрЃЉрЃў")
        }else{
            print("рЃ░рЃБрЃЊрЃў, рЃерЃљрЃарЃЋрЃљрЃџрЃў, рЃЉрЃЮрЃбрЃљрЃАрЃћрЃЉрЃў, рЃАрЃљрЃЌрЃЋрЃљрЃџрЃћрЃћрЃЉрЃў")
        }
    case .Cloudy(let celsius):
        if celsius > 20{
            print("рЃЏрЃљрЃўрЃЎрЃљ, рЃерЃЮрЃарЃбрЃў, рЃЉрЃЮрЃбрЃљрЃАрЃћрЃЉрЃў, рЃќрЃЮрЃюрЃгрЃўрЃЎрЃў")
        }else{
            print("рЃ░рЃБрЃЊрЃў, рЃерЃљрЃарЃЋрЃљрЃџрЃў, рЃЉрЃЮрЃбрЃљрЃАрЃћрЃЉрЃў, рЃќрЃЮрЃюрЃгрЃўрЃЎрЃў")
        }
    case .Rainy(let celsius):
        if celsius > 20{
            print("рЃЏрЃљрЃўрЃЎрЃљ, рЃерЃЮрЃарЃбрЃў, рЃЉрЃЮрЃбрЃљрЃАрЃћрЃЉрЃў, рЃќрЃЮрЃюрЃгрЃўрЃЎрЃў")
        }else{
            print("рЃ░рЃБрЃЊрЃў, рЃерЃљрЃарЃЋрЃљрЃџрЃў, рЃЉрЃЮрЃбрЃљрЃАрЃћрЃЉрЃў, рЃќрЃЮрЃюрЃгрЃўрЃЎрЃў")
        }
    case .Snowy(let celsius):
        if celsius > -5{
            print("рЃЎрЃЮрЃЏрЃЉрЃўрЃюрЃўрЃќрЃЮрЃюрЃў, рЃЦрЃЋрЃћрЃЊрЃљ рЃЎрЃЮрЃЏрЃЉрЃўрЃюрЃўрЃќрЃЮрЃюрЃў, рЃќрЃћрЃЊрЃљ рЃЎрЃЮрЃЏрЃЉрЃўрЃюрЃўрЃќрЃЮрЃюрЃў, рЃДрЃЋрЃћрЃџрЃљ рЃЎрЃЮрЃЏрЃЉрЃўрЃюрЃўрЃќрЃЮрЃюрЃў")
        }else{
            print("рЃЊрЃљрЃарЃЕрЃў рЃАрЃљрЃ«рЃерЃў")
        }
    }
}

var currentWeather = Weather.Snowy(Celsius: 0)
reccomendClothing(weather: currentWeather)


//4.рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ struct-рЃў Kanye, рЃцрЃарЃЮрЃцрЃћрЃарЃЌрЃћрЃЉрЃўрЃЌ: album, releaseYear. рЃљрЃЏрЃўрЃА рЃерЃћрЃЏрЃЊрЃћрЃњ рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ array-рЃў Kanye-рЃА рЃбрЃўрЃърЃўрЃА, рЃЕрЃљрЃљрЃЏрЃљрЃбрЃћрЃЌ рЃарЃљрЃЏрЃЮрЃЊрЃћрЃюрЃўрЃЏрЃћ Kanye-рЃА рЃЮрЃЉрЃўрЃћрЃЦрЃбрЃў, рЃЊрЃљ рЃерЃћрЃљрЃЋрЃАрЃћрЃЌ рЃЏрЃљрЃАрЃўрЃЋрЃў рЃЎрЃљрЃюрЃўрЃћрЃћрЃЉрЃўрЃЌ. рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ, рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃЏрЃўрЃўрЃдрЃћрЃЉрЃА рЃљрЃЏ рЃЎрЃљрЃюрЃўрЃћрЃћрЃЉрЃўрЃА рЃЏрЃљрЃАрЃўрЃЋрЃА рЃЊрЃљ рЃгрЃћрЃџрЃА. рЃцрЃБрЃюрЃЦрЃфрЃўрЃљрЃЏ рЃБрЃюрЃЊрЃљ рЃЊрЃљрЃњрЃЋрЃўрЃЉрЃарЃБрЃюрЃЮрЃА рЃДрЃЋрЃћрЃџрЃљ рЃљрЃџрЃЉрЃЮрЃЏрЃў рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃњрЃљрЃЏрЃЮрЃерЃЋрЃћрЃЉрЃБрЃџрЃўрЃљ рЃњрЃљрЃЊрЃљрЃгрЃЮрЃЊрЃћрЃЉрЃБрЃџрЃў рЃгрЃџрЃўрЃА рЃерЃћрЃЏрЃЊрЃћрЃњ рЃЊрЃљ рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃЮрЃА рЃўрЃАрЃўрЃюрЃў.

struct Kanye{
    var album: String
    var releaseYear: UInt
}

var myArray = [Kanye]()

myArray = [
    Kanye.init(album: "The College Dropout", releaseYear: 2004),
    Kanye.init(album: "Late Registration ", releaseYear: 2005),
    Kanye.init(album: "Graduation", releaseYear: 2007),
    Kanye.init(album: "808s & Heartbreak", releaseYear: 2008),
    Kanye.init(album: "My Beautiful Dark Twisted Fantasy ", releaseYear: 2010),
    Kanye.init(album: "Watch the Throne", releaseYear: 2011),
    Kanye.init(album: "Good Music Cruel Summer ", releaseYear: 2012),
    Kanye.init(album: "Yeezus", releaseYear: 2013)
]

func returnAllAlbumsBeforeYear(albums: [Kanye], yearToCheck: UInt) -> [String]{
    var filteredAlbums = [String]()
    for album in albums {
        if (album.releaseYear > yearToCheck){
            filteredAlbums.append(album.album)
        }
    }
    
    return filteredAlbums
}

print(returnAllAlbumsBeforeYear(albums: myArray, yearToCheck: 2008))


//5.рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ String-рЃўрЃА рЃбрЃўрЃърЃўрЃА lazy property wrapper рЃАрЃљрЃ«рЃћрЃџрЃљрЃЊ, cachedData. рЃўрЃюрЃўрЃфрЃўрЃљрЃџрЃўрЃќрЃћрЃЉрЃљ рЃњрЃљрЃБрЃЎрЃћрЃЌрЃћрЃЌ рЃЦрЃџрЃЮрЃЪрЃћрЃарЃўрЃЌ рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃА рЃАрЃбрЃарЃўрЃюрЃњрЃА рЃЏрЃюрЃўрЃерЃЋрЃюрЃћрЃџрЃЮрЃЉрЃўрЃЌ Рђюlazy рЃўрЃюрЃўрЃфрЃўрЃљрЃџрЃўрЃќрЃћрЃЉрЃБрЃџрЃўрЃљРђЮ. рЃЏрЃўрЃгрЃЋрЃЊрЃўрЃЌ рЃљрЃЏ рЃцрЃарЃЮрЃцрЃћрЃарЃЌрЃўрЃА рЃЊрЃљ рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃћрЃЌ рЃЏрЃўрЃАрЃў рЃЏрЃюрЃўрЃерЃЋрЃюрЃћрЃџрЃЮрЃЉрЃљ
struct lazyPropertyWrapper {
    lazy var cachedData: String = {
        return "lazy initialized"
    }()
}

let getClosure: () -> Void = {
    var instance = lazyPropertyWrapper()
    print(instance.cachedData)
}
    
getClosure()
    
//Optional:



//рЃЉрЃљрЃарЃЉрЃљрЃарЃћрЃЏ рЃњрЃљрЃЊрЃљрЃгрЃДрЃЋрЃўрЃбрЃљ рЃърЃарЃЮрЃњрЃарЃљрЃЏрЃўрЃарЃћрЃЉрЃљрЃАрЃЌрЃљрЃю рЃћрЃарЃЌрЃљрЃЊ рЃЊрЃљрЃЏрЃљрЃбрЃћрЃЉрЃўрЃЌрЃў рЃАрЃљрЃЏрЃАрЃљрЃ«рЃБрЃарЃў рЃЊрЃљрЃћрЃгрЃДрЃЮ рЃЊрЃљ рЃбрЃљрЃарЃЮрЃА рЃАрЃљрЃЏрЃЎрЃўрЃЌрЃ«рЃљрЃЮ рЃ»рЃўрЃ«рЃБрЃарЃў рЃњрЃљрЃ«рЃАрЃюрЃљ. рЃЏрЃўрЃАрЃў рЃАрЃљрЃ«рЃћрЃџрЃў рЃБрЃфрЃћрЃЉ рЃњрЃљрЃЋрЃљрЃарЃЊрЃљ рЃЊрЃљ рЃЦрЃљрЃарЃЌрЃЋрЃћрЃџрЃў рЃЋрЃљрЃарЃАрЃЎрЃЋрЃџрЃљрЃЋрЃћрЃЉрЃўрЃА рЃДрЃБрЃарЃљрЃЏрЃЊрЃћрЃф рЃЏрЃўрЃЋрЃўрЃЊрЃљ. рЃћрЃарЃЌ рЃЊрЃдрЃћрЃА рЃЏрЃљрЃА рЃ»рЃўрЃ«рЃБрЃарЃерЃў рЃФрЃљрЃџрЃўрЃљрЃю рЃюрЃљрЃфрЃюрЃЮрЃЉрЃў рЃАрЃљрЃ«рЃћрЃћрЃЉрЃў рЃњрЃљрЃЏрЃЮрЃћрЃфрЃ«рЃљрЃЊрЃљ, рЃЉрЃћрЃЊрЃўрЃюрЃљ рЃЊрЃљ рЃерЃљрЃЋрЃў рЃърЃарЃўрЃюрЃфрЃў. рЃърЃарЃЮрЃцрЃћрЃАрЃўрЃЮрЃюрЃљрЃџрЃЏрЃљ рЃюрЃљрЃЌрЃћрЃџрЃЏрЃ«рЃўрЃџрЃЋрЃћрЃџрЃЏрЃљ рЃњрЃљрЃерЃљрЃџрЃљ рЃЎрЃљрЃарЃбрЃў рЃЊрЃљ рЃЊрЃљрЃўрЃгрЃДрЃЮ рЃЏрЃљрЃЌ рЃЏрЃЮрЃЏрЃљрЃЋрЃљрЃџрЃерЃў рЃ«рЃћрЃџрЃћрЃЉрЃўрЃА рЃцрЃљрЃЌрЃБрЃарЃў. рЃЉрЃљрЃарЃЉрЃљрЃарЃћрЃА рЃбрЃљрЃарЃЮрЃА рЃЊрЃљрЃАрЃбрЃљ рЃАрЃљрЃЎрЃЏрЃљрЃЮрЃЊ рЃБрЃюрЃўрЃЎрЃљрЃџрЃБрЃарЃўрЃљ, рЃўрЃА рЃЏрЃ«рЃЮрЃџрЃЮрЃЊ 12 рЃЎрЃљрЃарЃбрЃА рЃерЃћрЃўрЃфрЃљрЃЋрЃА - Star, Empress, Tower, Hanged Man, Chariot, Moon, Hierophant, Devil, Lovers, Wheel of Fortune, Fool, Magician рЃЊрЃљ рЃЏрЃљрЃЌ рЃљрЃдрЃгрЃћрЃарЃћрЃЉрЃА -



//* Star: рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃўрЃЏрЃћрЃЊрЃА, рЃерЃЌрЃљрЃњрЃЮрЃюрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃАрЃБрЃџрЃўрЃћрЃа рЃ«рЃћрЃџрЃЏрЃФрЃдрЃЋрЃљрЃюрЃћрЃџрЃЮрЃЉрЃљрЃА. рЃћрЃА рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃњрЃљрЃюрЃљрЃ«рЃџрЃћрЃЉрЃљрЃА, рЃЮрЃърЃбрЃўрЃЏрЃўрЃќрЃЏрЃА рЃЊрЃљ рЃЏрЃЮрЃЏрЃљрЃЋрЃџрЃўрЃА рЃарЃгрЃЏрЃћрЃюрЃљрЃА.
//
//* Empress: рЃњрЃљрЃюрЃљрЃАрЃљрЃ«рЃўрЃћрЃарЃћрЃЉрЃА рЃљрЃдрЃќрЃарЃЊрЃљрЃА, рЃАрЃўрЃБрЃ«рЃЋрЃћрЃА рЃЊрЃљ рЃЊрЃћрЃЊрЃЮрЃЉрЃарЃўрЃЋ рЃўрЃюрЃАрЃбрЃўрЃюрЃЦрЃбрЃћрЃЉрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃюрЃљрЃДрЃЮрЃцрЃўрЃћрЃарЃћрЃЉрЃљрЃА, рЃЎрЃарЃћрЃљрЃбрЃўрЃБрЃџрЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃ░рЃљрЃарЃЏрЃЮрЃюрЃўрЃљрЃА рЃБрЃарЃЌрЃўрЃћрЃарЃЌрЃЮрЃЉрЃћрЃЉрЃерЃў.
//
//* Tower: рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃБрЃћрЃфрЃљрЃа рЃфрЃЋрЃџрЃўрЃџрЃћрЃЉрЃљрЃА, рЃЦрЃљрЃЮрЃАрЃА рЃЊрЃљ рЃњрЃљрЃюрЃљрЃЊрЃњрЃБрЃарЃћрЃЉрЃљрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃљрЃ»рЃљрЃюрЃДрЃћрЃЉрЃљрЃА, рЃњрЃљрЃЏрЃЮрЃфрЃ«рЃљрЃЊрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃФрЃЋрЃћрЃџрЃў рЃАрЃбрЃарЃБрЃЦрЃбрЃБрЃарЃћрЃЉрЃўрЃА рЃюрЃњрЃарЃћрЃЋрЃљрЃА рЃљрЃ«рЃљрЃџрЃў рЃгрЃљрЃЏрЃЮрЃгрЃДрЃћрЃЉрЃўрЃАрЃЌрЃЋрЃўрЃА.
//
//* Hanged Man: рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃЏрЃАрЃ«рЃЋрЃћрЃарЃърЃџрЃА, рЃЊрЃљрЃюрЃћрЃЉрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃњрЃљрЃерЃЋрЃћрЃЉрЃљрЃА. рЃћрЃА рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃерЃћрЃЕрЃћрЃарЃћрЃЉрЃўрЃА, рЃљрЃ«рЃљрЃџрЃў рЃърЃћрЃарЃАрЃърЃћрЃЦрЃбрЃўрЃЋрЃћрЃЉрЃўрЃА рЃЏрЃЮрЃърЃЮрЃЋрЃћрЃЉрЃўрЃАрЃљ рЃЊрЃљ рЃЌрЃЋрЃўрЃЌрЃарЃћрЃцрЃџрЃћрЃЦрЃАрЃўрЃўрЃА рЃърЃћрЃарЃўрЃЮрЃЊрЃА.
//
//* Chariot: рЃњрЃљрЃюрЃљрЃАрЃљрЃ«рЃўрЃћрЃарЃћрЃЉрЃА рЃюрЃћрЃЉрЃўрЃАрЃДрЃЮрЃцрЃљрЃА, рЃЏрЃЮрЃюрЃЊрЃЮрЃЏрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃњрЃљрЃЏрЃљрЃарЃ»рЃЋрЃћрЃЉрЃљрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃАрЃљрЃЎрЃБрЃЌрЃљрЃа рЃфрЃ«рЃЮрЃЋрЃарЃћрЃЉрЃљрЃќрЃћ рЃЎрЃЮрЃюрЃбрЃарЃЮрЃџрЃўрЃА рЃљрЃдрЃћрЃЉрЃљрЃА, рЃЏрЃўрЃќрЃюрЃћрЃЉрЃўрЃА рЃЏрЃўрЃдрЃгрЃћрЃЋрЃљрЃА рЃЊрЃљ рЃЊрЃљрЃЉрЃарЃЎрЃЮрЃџрЃћрЃЉрЃћрЃЉрЃўрЃА рЃњрЃљрЃЊрЃљрЃџрЃљрЃ«рЃЋрЃљрЃА рЃцрЃЮрЃЎрЃБрЃАрЃўрЃарЃћрЃЉрЃўрЃАрЃљ рЃЊрЃљ рЃАрЃгрЃарЃљрЃцрЃЋрЃўрЃА рЃњрЃќрЃўрЃЌ.
//
//* Moon: рЃљрЃдрЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃўрЃюрЃбрЃБрЃўрЃфрЃўрЃљрЃА, рЃўрЃџрЃБрЃќрЃўрЃљрЃА рЃЊрЃљ рЃЦрЃЋрЃћрЃфрЃюрЃЮрЃЉрЃўрЃћрЃа рЃљрЃќрЃарЃћрЃЉрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃњрЃљрЃБрЃарЃЎрЃЋрЃћрЃЋрЃџрЃЮрЃЉрЃљрЃА, рЃЊрЃљрЃЉрЃюрЃћрЃБрЃџрЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃљрЃБрЃфрЃўрЃџрЃћрЃЉрЃџрЃЮрЃЉрЃљрЃА, рЃћрЃюрЃЊрЃЮрЃЌ рЃАрЃљрЃЎрЃБрЃЌрЃљрЃа рЃўрЃюрЃАрЃбрЃўрЃюрЃЦрЃбрЃћрЃЉрЃА рЃБрЃфрЃюрЃЮрЃЉрЃўрЃАрЃЎрЃћрЃю рЃюрЃљрЃЋрЃўрЃњрЃљрЃфрЃўрЃўрЃА рЃЊрЃарЃЮрЃА.
//
//* Hierophant: рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃбрЃарЃљрЃЊрЃўрЃфрЃўрЃљрЃА, рЃерЃћрЃАрЃљрЃЉрЃљрЃЏрЃўрЃАрЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃАрЃБрЃџрЃўрЃћрЃа рЃ«рЃћрЃџрЃЏрЃФрЃдрЃЋрЃљрЃюрЃћрЃџрЃЮрЃЉрЃљрЃА. рЃћрЃА рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃАрЃўрЃЉрЃарЃФрЃюрЃўрЃА рЃФрЃўрЃћрЃЉрЃљрЃА рЃЊрЃљрЃЏрЃЎрЃЋрЃўрЃЊрЃарЃћрЃЉрЃБрЃџрЃў рЃарЃгрЃЏрЃћрЃюрЃћрЃЉрЃўрЃАрЃњрЃљрЃю, рЃўрЃюрЃАрЃбрЃўрЃбрЃБрЃбрЃћрЃЉрЃўрЃАрЃљ рЃЊрЃљ рЃЏрЃћрЃюрЃбрЃЮрЃарЃћрЃЉрЃўрЃАрЃњрЃљрЃю.
//
//* Devil: рЃњрЃљрЃюрЃљрЃАрЃљрЃ«рЃўрЃћрЃарЃћрЃЉрЃА рЃфрЃЊрЃБрЃюрЃћрЃЉрЃљрЃА, рЃЏрЃЮрЃюрЃЮрЃЉрЃљрЃАрЃљ рЃЊрЃљ рЃЏрЃљрЃбрЃћрЃарЃўрЃљрЃџрЃўрЃќрЃЏрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃљрЃЊрЃљрЃЏрЃўрЃљрЃюрЃўрЃА рЃЉрЃБрЃюрЃћрЃЉрЃўрЃА рЃЉрЃюрЃћрЃџ рЃљрЃАрЃърЃћрЃЦрЃбрЃћрЃЉрЃА, рЃЊрЃљрЃЏрЃЮрЃЎрЃўрЃЊрЃћрЃЉрЃБрЃџрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃерЃћрЃЏрЃќрЃдрЃБрЃЊрЃЋрЃћрЃџрЃў рЃарЃгрЃЏрЃћрЃюрЃћрЃЉрЃўрЃАрЃљ рЃЊрЃљ рЃЕрЃЋрЃћрЃЋрЃћрЃЉрЃўрЃАрЃњрЃљрЃю рЃЌрЃљрЃЋрЃўрЃА рЃЊрЃљрЃдрЃгрЃћрЃЋрЃўрЃА рЃљрЃБрЃфрЃўрЃџрЃћрЃЉрЃџрЃЮрЃЉрЃљрЃА.
//
//* Lovers: рЃљрЃдрЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃърЃљрЃарЃбрЃюрЃўрЃЮрЃарЃЮрЃЉрЃљрЃА, рЃљрЃарЃЕрЃћрЃЋрЃљрЃюрЃА рЃЊрЃљ рЃ░рЃљрЃарЃЏрЃЮрЃюрЃўрЃљрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃАрЃўрЃДрЃЋрЃљрЃарЃБрЃџрЃА, рЃЏрЃўрЃќрЃўрЃЊрЃБрЃџрЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃњрЃљрЃЊрЃљрЃгрЃДрЃЋрЃћрЃбрЃўрЃџрЃћрЃЉрЃўрЃА рЃЏрЃўрЃдрЃћрЃЉрЃўрЃА рЃљрЃБрЃфрЃўрЃџрЃћрЃЉрЃџрЃЮрЃЉрЃљрЃА рЃдрЃўрЃарЃћрЃЉрЃБрЃџрЃћрЃЉрЃћрЃЉрЃќрЃћ рЃЊрЃљ рЃАрЃ«рЃЋрЃћрЃЉрЃЌрЃљрЃю рЃЎрЃљрЃЋрЃерЃўрЃарЃћрЃЉрЃќрЃћ рЃЊрЃљрЃДрЃарЃЊрЃюрЃЮрЃЉрЃўрЃЌ.
//
//* Wheel of Fortune: рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃЉрЃћрЃЊрЃА, рЃфрЃўрЃЎрЃџрЃћрЃЉрЃА рЃЊрЃљ рЃЏрЃЮрЃБрЃџрЃЮрЃЊрЃюрЃћрЃџ рЃфрЃЋрЃџрЃўрЃџрЃћрЃЉрЃћрЃЉрЃА. рЃћрЃА рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃўрЃдрЃЉрЃљрЃџрЃА, рЃерЃћрЃАрЃљрЃФрЃџрЃћрЃЉрЃџрЃЮрЃЉрЃћрЃЉрЃА рЃЊрЃљ рЃфрЃ«рЃЮрЃЋрЃарЃћрЃЉрЃўрЃАрЃћрЃБрЃџрЃў рЃЏрЃЮрЃњрЃќрЃљрЃБрЃарЃЮрЃЉрЃўрЃА рЃљрЃдрЃЏрЃљрЃЋрЃџрЃЮрЃЉрЃљрЃАрЃљ рЃЊрЃљ рЃЋрЃљрЃарЃЊрЃюрЃљрЃА, рЃњрЃЋрЃљрЃ«рЃАрЃћрЃюрЃћрЃЉрЃА, рЃарЃЮрЃЏ рЃфрЃЋрЃџрЃўрЃџрЃћрЃЉрЃљ рЃњрЃљрЃарЃЊрЃљрЃБрЃЋрЃљрЃџрЃўрЃљ.
//
//* Fool: рЃњрЃљрЃюрЃљрЃАрЃљрЃ«рЃўрЃћрЃарЃћрЃЉрЃА рЃБрЃЊрЃљрЃюрЃљрЃерЃљрЃБрЃџрЃЮрЃЉрЃљрЃА, рЃАрЃърЃЮрЃюрЃбрЃљрЃюрЃБрЃарЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃљрЃ«рЃљрЃџ рЃгрЃљрЃЏрЃЮрЃгрЃДрЃћрЃЉрЃћрЃЉрЃА. рЃћрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃарЃгрЃЏрЃћрЃюрЃўрЃА рЃюрЃљрЃ«рЃбрЃЮрЃЏрЃА, рЃЌрЃљрЃЋрЃњрЃљрЃЊрЃљрЃАрЃљрЃЋрЃџрЃћрЃЉрЃўрЃА рЃЏрЃўрЃдрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃАрЃљрЃЏрЃДрЃљрЃарЃЮрЃА рЃ«рЃћрЃџрЃЏрЃФрЃдрЃЋрЃљрЃюрЃћрЃџрЃЮрЃЉрЃўрЃАрЃљрЃЊрЃЏрЃў рЃюрЃЊрЃЮрЃЉрЃљрЃА.
//
//* Magician: рЃљрЃдрЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃњрЃљрЃЏрЃЮрЃЋрЃџрЃўрЃюрЃћрЃЉрЃљрЃА, рЃФрЃљрЃџрЃљрЃА рЃЊрЃљ рЃърЃЮрЃбрЃћрЃюрЃфрЃўрЃљрЃџрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃЎрЃарЃћрЃљрЃбрЃўрЃБрЃџрЃЮрЃЉрЃљрЃА, рЃБрЃюрЃљрЃарЃА рЃЊрЃљ рЃБрЃюрЃљрЃарЃА, рЃўрЃЊрЃћрЃћрЃЉрЃў рЃарЃћрЃљрЃџрЃЮрЃЉрЃљрЃЊ рЃњрЃљрЃарЃЊрЃљрЃЦрЃЏрЃюрЃљрЃА рЃЮрЃарЃўрЃћрЃюрЃбрЃўрЃарЃћрЃЉрЃБрЃџрЃў рЃњрЃљрЃюрЃќрЃарЃљрЃ«рЃЋрЃўрЃАрЃљ рЃЊрЃљ рЃЏрЃЮрЃЦрЃЏрЃћрЃЊрЃћрЃЉрЃўрЃА рЃњрЃќрЃўрЃЌ.
//
//
//
//рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ Enum рЃАрЃљрЃ«рЃћрЃџрЃљрЃЊ TarotCard рЃЊрЃљ рЃњрЃљрЃюрЃАрЃљрЃќрЃдрЃЋрЃарЃћрЃЌ рЃЏрЃљрЃАрЃерЃў 12 рЃЎрЃљрЃарЃбрЃўрЃА рЃЦрЃћрЃўрЃАрЃў.
//
//рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ рЃАрЃбрЃљрЃбрЃўрЃЎрЃБрЃарЃў рЃЏрЃћрЃЌрЃЮрЃЊрЃў TarotCard-рЃерЃў рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃЊрЃљрЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃА рЃЎрЃљрЃарЃбрЃА рЃерЃћрЃарЃЕрЃћрЃЋрЃўрЃЌрЃљрЃЊ
//
//рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ рЃЏрЃћрЃЌрЃЮрЃЊрЃў TarotCard-рЃерЃў рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃЊрЃљрЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃА рЃЎрЃљрЃарЃбрЃўрЃА рЃљрЃдрЃгрЃћрЃарЃљрЃА string-рЃўрЃА рЃАрЃљрЃ«рЃўрЃЌ
//
//рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ рЃАрЃбрЃарЃБрЃЦрЃбрЃБрЃарЃљ рЃАрЃљрЃ«рЃћрЃџрЃљрЃЊ TarotReading. рЃњрЃљрЃБрЃгрЃћрЃарЃћрЃЌ рЃцрЃарЃЮрЃцрЃћрЃарЃЌрЃўрЃћрЃЉрЃў рЃгрЃљрЃарЃАрЃБрЃџрЃў, рЃљрЃгрЃЏрЃДрЃЮ рЃЊрЃљ рЃЏрЃЮрЃЏрЃљрЃЋрЃљрЃџрЃў. рЃњрЃљрЃБрЃЎрЃћрЃЌрЃћрЃЌ рЃўрЃюрЃўрЃфрЃўрЃљрЃџрЃўрЃќрЃљрЃфрЃўрЃљ рЃљрЃЏ рЃцрЃарЃЮрЃърЃћрЃарЃЌрЃўрЃћрЃЉрЃА рЃарЃљрЃЌрЃљ рЃЏрЃљрЃЌ рЃЏрЃўрЃўрЃдрЃЮрЃю рЃерЃћрЃарЃЕрЃћрЃЋрЃўрЃЌрЃў рЃбрЃљрЃарЃЮрЃА рЃЎрЃљрЃарЃбрЃўрЃА рЃљрЃдрЃгрЃћрЃарЃўрЃА рЃЏрЃюрЃўрЃерЃЋрЃюрЃћрЃџрЃЮрЃЉрЃљ.
//
//рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ рЃЏрЃћрЃЌрЃЮрЃЊрЃў TarotReading-рЃерЃў, рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃљрЃЋрЃА рЃљрЃЏ рЃАрЃљрЃЏ рЃљрЃарЃЕрЃћрЃБрЃџ рЃбрЃљрЃарЃЮрЃА рЃЎрЃљрЃарЃбрЃА.
//

enum TarotCard: String, CaseIterable {
    case Star = "рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃўрЃЏрЃћрЃЊрЃА, рЃерЃЌрЃљрЃњрЃЮрЃюрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃАрЃБрЃџрЃўрЃћрЃа рЃ«рЃћрЃџрЃЏрЃФрЃдрЃЋрЃљрЃюрЃћрЃџрЃЮрЃЉрЃљрЃА. рЃћрЃА рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃњрЃљрЃюрЃљрЃ«рЃџрЃћрЃЉрЃљрЃА, рЃЮрЃърЃбрЃўрЃЏрЃўрЃќрЃЏрЃА рЃЊрЃљ рЃЏрЃЮрЃЏрЃљрЃЋрЃџрЃўрЃА рЃарЃгрЃЏрЃћрЃюрЃљрЃА."
    case Empress = "рЃњрЃљрЃюрЃљрЃАрЃљрЃ«рЃўрЃћрЃарЃћрЃЉрЃА рЃљрЃдрЃќрЃарЃЊрЃљрЃА, рЃАрЃўрЃБрЃ«рЃЋрЃћрЃА рЃЊрЃљ рЃЊрЃћрЃЊрЃЮрЃЉрЃарЃўрЃЋ рЃўрЃюрЃАрЃбрЃўрЃюрЃЦрЃбрЃћрЃЉрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃюрЃљрЃДрЃЮрЃцрЃўрЃћрЃарЃћрЃЉрЃљрЃА, рЃЎрЃарЃћрЃљрЃбрЃўрЃБрЃџрЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃ░рЃљрЃарЃЏрЃЮрЃюрЃўрЃљрЃА рЃБрЃарЃЌрЃўрЃћрЃарЃЌрЃЮрЃЉрЃћрЃЉрЃерЃў."
    case Tower = "рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃБрЃћрЃфрЃљрЃа рЃфрЃЋрЃџрЃўрЃџрЃћрЃЉрЃљрЃА, рЃЦрЃљрЃЮрЃАрЃА рЃЊрЃљ рЃњрЃљрЃюрЃљрЃЊрЃњрЃБрЃарЃћрЃЉрЃљрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃљрЃ»рЃљрЃюрЃДрЃћрЃЉрЃљрЃА, рЃњрЃљрЃЏрЃЮрЃфрЃ«рЃљрЃЊрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃФрЃЋрЃћрЃџрЃў рЃАрЃбрЃарЃБрЃЦрЃбрЃБрЃарЃћрЃЉрЃўрЃА рЃюрЃњрЃарЃћрЃЋрЃљрЃА рЃљрЃ«рЃљрЃџрЃў рЃгрЃљрЃЏрЃЮрЃгрЃДрЃћрЃЉрЃўрЃАрЃЌрЃЋрЃўрЃА."
    case HangedMan = "рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃЏрЃАрЃ«рЃЋрЃћрЃарЃърЃџрЃА, рЃЊрЃљрЃюрЃћрЃЉрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃњрЃљрЃерЃЋрЃћрЃЉрЃљрЃА. рЃћрЃА рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃерЃћрЃЕрЃћрЃарЃћрЃЉрЃўрЃА, рЃљрЃ«рЃљрЃџрЃў рЃърЃћрЃарЃАрЃърЃћрЃЦрЃбрЃўрЃЋрЃћрЃЉрЃўрЃА рЃЏрЃЮрЃърЃЮрЃЋрЃћрЃЉрЃўрЃАрЃљ рЃЊрЃљ рЃЌрЃЋрЃўрЃЌрЃарЃћрЃцрЃџрЃћрЃЦрЃАрЃўрЃўрЃА рЃърЃћрЃарЃўрЃЮрЃЊрЃА."
    case Chariot = "рЃњрЃљрЃюрЃљрЃАрЃљрЃ«рЃўрЃћрЃарЃћрЃЉрЃА рЃюрЃћрЃЉрЃўрЃАрЃДрЃЮрЃцрЃљрЃА, рЃЏрЃЮрЃюрЃЊрЃЮрЃЏрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃњрЃљрЃЏрЃљрЃарЃ»рЃЋрЃћрЃЉрЃљрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃАрЃљрЃЎрЃБрЃЌрЃљрЃа рЃфрЃ«рЃЮрЃЋрЃарЃћрЃЉрЃљрЃќрЃћ рЃЎрЃЮрЃюрЃбрЃарЃЮрЃџрЃўрЃА рЃљрЃдрЃћрЃЉрЃљрЃА, рЃЏрЃўрЃќрЃюрЃћрЃЉрЃўрЃА рЃЏрЃўрЃдрЃгрЃћрЃЋрЃљрЃА рЃЊрЃљ рЃЊрЃљрЃЉрЃарЃЎрЃЮрЃџрЃћрЃЉрЃћрЃЉрЃўрЃА рЃњрЃљрЃЊрЃљрЃџрЃљрЃ«рЃЋрЃљрЃА рЃцрЃЮрЃЎрЃБрЃАрЃўрЃарЃћрЃЉрЃўрЃАрЃљ рЃЊрЃљ рЃАрЃгрЃарЃљрЃцрЃЋрЃўрЃА рЃњрЃќрЃўрЃЌ."
    case Moon = "рЃљрЃдрЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃўрЃюрЃбрЃБрЃўрЃфрЃўрЃљрЃА, рЃўрЃџрЃБрЃќрЃўрЃљрЃА рЃЊрЃљ рЃЦрЃЋрЃћрЃфрЃюрЃЮрЃЉрЃўрЃћрЃа рЃљрЃќрЃарЃћрЃЉрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃњрЃљрЃБрЃарЃЎрЃЋрЃћрЃЋрЃџрЃЮрЃЉрЃљрЃА, рЃЊрЃљрЃЉрЃюрЃћрЃБрЃџрЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃљрЃБрЃфрЃўрЃџрЃћрЃЉрЃџрЃЮрЃЉрЃљрЃА, рЃћрЃюрЃЊрЃЮрЃЌ рЃАрЃљрЃЎрЃБрЃЌрЃљрЃа рЃўрЃюрЃАрЃбрЃўрЃюрЃЦрЃбрЃћрЃЉрЃА рЃБрЃфрЃюрЃЮрЃЉрЃўрЃАрЃЎрЃћрЃю рЃюрЃљрЃЋрЃўрЃњрЃљрЃфрЃўрЃўрЃА рЃЊрЃарЃЮрЃА."
    case Hierophant = "рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃбрЃарЃљрЃЊрЃўрЃфрЃўрЃљрЃА, рЃерЃћрЃАрЃљрЃЉрЃљрЃЏрЃўрЃАрЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃАрЃБрЃџрЃўрЃћрЃа рЃ«рЃћрЃџрЃЏрЃФрЃдрЃЋрЃљрЃюрЃћрЃџрЃЮрЃЉрЃљрЃА. рЃћрЃА рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃАрЃўрЃЉрЃарЃФрЃюрЃўрЃА рЃФрЃўрЃћрЃЉрЃљрЃА рЃЊрЃљрЃЏрЃЎрЃЋрЃўрЃЊрЃарЃћрЃЉрЃБрЃџрЃў рЃарЃгрЃЏрЃћрЃюрЃћрЃЉрЃўрЃАрЃњрЃљрЃю, рЃўрЃюрЃАрЃбрЃўрЃбрЃБрЃбрЃћрЃЉрЃўрЃАрЃљ рЃЊрЃљ рЃЏрЃћрЃюрЃбрЃЮрЃарЃћрЃЉрЃўрЃАрЃњрЃљрЃю."
    case Devil = "рЃњрЃљрЃюрЃљрЃАрЃљрЃ«рЃўрЃћрЃарЃћрЃЉрЃА рЃфрЃЊрЃБрЃюрЃћрЃЉрЃљрЃА, рЃЏрЃЮрЃюрЃЮрЃЉрЃљрЃАрЃљ рЃЊрЃљ рЃЏрЃљрЃбрЃћрЃарЃўрЃљрЃџрЃўрЃќрЃЏрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃљрЃЊрЃљрЃЏрЃўрЃљрЃюрЃўрЃА рЃЉрЃБрЃюрЃћрЃЉрЃўрЃА рЃЉрЃюрЃћрЃџ рЃљрЃАрЃърЃћрЃЦрЃбрЃћрЃЉрЃА, рЃЊрЃљрЃЏрЃЮрЃЎрЃўрЃЊрЃћрЃЉрЃБрЃџрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃерЃћрЃЏрЃќрЃдрЃБрЃЊрЃЋрЃћрЃџрЃў рЃарЃгрЃЏрЃћрЃюрЃћрЃЉрЃўрЃАрЃљ рЃЊрЃљ рЃЕрЃЋрЃћрЃЋрЃћрЃЉрЃўрЃАрЃњрЃљрЃю рЃЌрЃљрЃЋрЃўрЃА рЃЊрЃљрЃдрЃгрЃћрЃЋрЃўрЃА рЃљрЃБрЃфрЃўрЃџрЃћрЃЉрЃџрЃЮрЃЉрЃљрЃА."
    case Lovers = "рЃљрЃдрЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃърЃљрЃарЃбрЃюрЃўрЃЮрЃарЃЮрЃЉрЃљрЃА, рЃљрЃарЃЕрЃћрЃЋрЃљрЃюрЃА рЃЊрЃљ рЃ░рЃљрЃарЃЏрЃЮрЃюрЃўрЃљрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃАрЃўрЃДрЃЋрЃљрЃарЃБрЃџрЃА, рЃЏрЃўрЃќрЃўрЃЊрЃБрЃџрЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃњрЃљрЃЊрЃљрЃгрЃДрЃЋрЃћрЃбрЃўрЃџрЃћрЃЉрЃўрЃА рЃЏрЃўрЃдрЃћрЃЉрЃўрЃА рЃљрЃБрЃфрЃўрЃџрЃћрЃЉрЃџрЃЮрЃЉрЃљрЃА рЃдрЃўрЃарЃћрЃЉрЃБрЃџрЃћрЃЉрЃћрЃЉрЃќрЃћ рЃЊрЃљ рЃАрЃ«рЃЋрЃћрЃЉрЃЌрЃљрЃю рЃЎрЃљрЃЋрЃерЃўрЃарЃћрЃЉрЃќрЃћ рЃЊрЃљрЃДрЃарЃЊрЃюрЃЮрЃЉрЃўрЃЌ."
    case WheelOfFortune = "рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃЉрЃћрЃЊрЃА, рЃфрЃўрЃЎрЃџрЃћрЃЉрЃА рЃЊрЃљ рЃЏрЃЮрЃБрЃџрЃЮрЃЊрЃюрЃћрЃџ рЃфрЃЋрЃџрЃўрЃџрЃћрЃЉрЃћрЃЉрЃА. рЃћрЃА рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃўрЃдрЃЉрЃљрЃџрЃА, рЃерЃћрЃАрЃљрЃФрЃџрЃћрЃЉрЃџрЃЮрЃЉрЃћрЃЉрЃА рЃЊрЃљ рЃфрЃ«рЃЮрЃЋрЃарЃћрЃЉрЃўрЃАрЃћрЃБрЃџрЃў рЃЏрЃЮрЃњрЃќрЃљрЃБрЃарЃЮрЃЉрЃўрЃА рЃљрЃдрЃЏрЃљрЃЋрЃџрЃЮрЃЉрЃљрЃАрЃљ рЃЊрЃљ рЃЋрЃљрЃарЃЊрЃюрЃљрЃА, рЃњрЃЋрЃљрЃ«рЃАрЃћрЃюрЃћрЃЉрЃА, рЃарЃЮрЃЏ рЃфрЃЋрЃџрЃўрЃџрЃћрЃЉрЃљ рЃњрЃљрЃарЃЊрЃљрЃБрЃЋрЃљрЃџрЃўрЃљ."
    case Fool = "рЃњрЃљрЃюрЃљрЃАрЃљрЃ«рЃўрЃћрЃарЃћрЃЉрЃА рЃБрЃЊрЃљрЃюрЃљрЃерЃљрЃБрЃџрЃЮрЃЉрЃљрЃА, рЃАрЃърЃЮрЃюрЃбрЃљрЃюрЃБрЃарЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃљрЃ«рЃљрЃџ рЃгрЃљрЃЏрЃЮрЃгрЃДрЃћрЃЉрЃћрЃЉрЃА. рЃћрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃарЃгрЃЏрЃћрЃюрЃўрЃА рЃюрЃљрЃ«рЃбрЃЮрЃЏрЃА, рЃЌрЃљрЃЋрЃњрЃљрЃЊрЃљрЃАрЃљрЃЋрЃџрЃћрЃЉрЃўрЃА рЃЏрЃўрЃдрЃћрЃЉрЃљрЃА рЃЊрЃљ рЃАрЃљрЃЏрЃДрЃљрЃарЃЮрЃА рЃ«рЃћрЃџрЃЏрЃФрЃдрЃЋрЃљрЃюрЃћрЃџрЃЮрЃЉрЃўрЃАрЃљрЃЊрЃЏрЃў рЃюрЃЊрЃЮрЃЉрЃљрЃА."
    case Magician = "рЃљрЃдрЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃњрЃљрЃЏрЃЮрЃЋрЃџрЃўрЃюрЃћрЃЉрЃљрЃА, рЃФрЃљрЃџрЃљрЃА рЃЊрЃљ рЃърЃЮрЃбрЃћрЃюрЃфрЃўрЃљрЃџрЃА. рЃўрЃА рЃгрЃљрЃарЃЏрЃЮрЃљрЃЊрЃњрЃћрЃюрЃА рЃЎрЃарЃћрЃљрЃбрЃўрЃБрЃџрЃЮрЃЉрЃљрЃА, рЃБрЃюрЃљрЃарЃА рЃЊрЃљ рЃБрЃюрЃљрЃарЃА, рЃўрЃЊрЃћрЃћрЃЉрЃў рЃарЃћрЃљрЃџрЃЮрЃЉрЃљрЃЊ рЃњрЃљрЃарЃЊрЃљрЃЦрЃЏрЃюрЃљрЃА рЃЮрЃарЃўрЃћрЃюрЃбрЃўрЃарЃћрЃЉрЃБрЃџрЃў рЃњрЃљрЃюрЃќрЃарЃљрЃ«рЃЋрЃўрЃАрЃљ рЃЊрЃљ рЃЏрЃЮрЃЦрЃЏрЃћрЃЊрЃћрЃЉрЃўрЃА рЃњрЃќрЃўрЃЌ."
    
    static func randomTarot() -> TarotCard {
        return self.allCases.randomElement()!
    }
    
    func getTarotDefinition() -> String{
        return self.rawValue
    }
}

struct TarotReading {
    var pastTarot: TarotCard
    var presentTarot: TarotCard
    var futureTarot: TarotCard
    
    init(){
        self.pastTarot = TarotCard.randomTarot()
        self.presentTarot = TarotCard.randomTarot()
        self.futureTarot = TarotCard.randomTarot()
        var iter = 0
        while self.pastTarot == self.presentTarot || self.presentTarot == self.futureTarot || self.pastTarot == self.futureTarot{
//            print( self.pastTarot, self.presentTarot, self.futureTarot)
            self.presentTarot = TarotCard.randomTarot()
            self.futureTarot = TarotCard.randomTarot()
        }
    }
    
    func ReadTarot(){
        print()
        print("рЃгрЃљрЃарЃАрЃБрЃџрЃўрЃА рЃЎрЃљрЃарЃбрЃўрЃљ - \(pastTarot) рЃЊрЃљ рЃўрЃА \(pastTarot.getTarotDefinition()) \n")
        print("рЃљрЃгрЃЏрЃДрЃЮрЃА рЃЎрЃљрЃарЃбрЃўрЃљ - \(presentTarot) рЃЊрЃљ рЃўрЃА \(presentTarot.getTarotDefinition())\n")
        print("рЃЏрЃЮрЃЏрЃљрЃЋрЃџрЃўрЃА рЃЎрЃљрЃарЃбрЃўрЃљ - \(futureTarot) рЃЊрЃљ рЃўрЃА \(futureTarot.getTarotDefinition())\n")
    }
}

var myTarotReading = TarotReading.init()

myTarotReading.ReadTarot()
